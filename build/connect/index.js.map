{"version":3,"sources":["../../src/connect/index.js"],"names":["micro","redis","settings","Promise","resolve","reject","errorHandler","client","createClient","retry_strategy","on","error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,KAAD,EAAQC,KAAR,EAAeC,QAAf;AAAA,SAA4B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC1E,QAAMC,eAAe,4BAAaN,KAAb,CAArB;AACA,QAAMO,SAASN,MACZO,YADY;AAEXC;AAFW,OAGRP,QAHQ,EAAf;;AAMAK,WACGG,EADH,CACM,OADN,EACeJ,YADf,EAEGI,EAFH,CAEM,OAFN,EAEe,iBAAS;AACpB,UAAIC,KAAJ,EAAW;AACTL,qBAAaK,KAAb;AACA,eAAON,OAAOM,KAAP,CAAP;AACD;;AAEDP,cAAQG,MAAR;AACD,KATH;AAUD,GAlB0C,CAA5B;AAAA,C","file":"index.js","sourcesContent":["import ErrorHandler from './../utils/error-handler';\nimport retryStrategy from './retry-strategy';\n\nexport default (micro, redis, settings) => new Promise((resolve, reject) => {\n  const errorHandler = ErrorHandler(micro);\n  const client = redis\n    .createClient({\n      retry_strategy: retryStrategy,\n      ...settings\n    });\n  \n  client\n    .on(\"error\", errorHandler)\n    .on(\"ready\", error => {\n      if (error) {\n        errorHandler(error);\n        return reject(error);\n      }\n      \n      resolve(client);\n    });\n});"]}