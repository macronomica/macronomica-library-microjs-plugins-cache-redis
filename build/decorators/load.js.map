{"version":3,"sources":["../../src/decorators/load.js"],"names":["micro","client","tagget","save","key","callback","tags","Promise","resolve","reject","hgetall","err","res","logger","error","code","message","promise","then","result","Array","isArray","JSON","parse","value","parseReviver","hasTagUpdated","originalTags","Object","keys","some","search","Date"],"mappings":";;;;;;AAAA;;;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR;AAAA,MAAkBC,MAAlB,QAAkBA,MAAlB;AAAA,MAA0BC,IAA1B,QAA0BA,IAA1B;AAAA,SAAqC,UAACC,GAAD,EAAMC,QAAN;AAAA,oFAA2B,EAA3B;AAAA,QAAkBC,IAAlB,SAAkBA,IAAlB;;AAAA,WAAkC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrHR,aAAOS,OAAP,CAAeN,GAAf,EAAoB,UAAUO,GAAV,EAAeC,GAAf,EAAoB;AACtC,YAAID,GAAJ,EAAS;AACPX,gBAAMa,MAAN,CAAaC,KAAb,CAAmBH,GAAnB;AACA,iBAAOF,OAAO;AACZM,oDAA0CJ,IAAII,IADlC;AAEZC,2JAAqCZ,GAArC;AAFY,WAAP,CAAP;AAID;;AAED,YAAIQ,QAAQ,IAAZ,EAAkB;;AAEhB,cAAI,sBAAWP,QAAX,CAAJ,EAA0B;AACxB,gBAAIY,UAAUZ,SAASD,GAAT,CAAd;;AAEA,gBAAI,CAACa,OAAD,IAAY,EAAE,UAAUA,OAAV,IAAqB,sBAAWA,QAAQC,IAAnB,CAAvB,CAAhB,EAAkE;AAChED,wBAAUV,QAAQC,OAAR,CAAgBS,OAAhB,CAAV;AACD;;AAED,mBAAOA,QACJC,IADI,CACC;AAAA,qBAAUf,KAAKC,GAAL,EAAUe,MAAV,EAAkB,EAAEb,UAAF,EAAlB,CAAV;AAAA,aADD,EAEJY,IAFI,CAECV,OAFD,EAEUC,MAFV,CAAP;AAGD;;AAED,iBAAOD,QAAQI,GAAR,CAAP;AACD;;AAED,YAAI,CAACQ,MAAMC,OAAN,CAAcf,IAAd,CAAL,EAA0B;AACxB,iBAAOE,QAAQc,KAAKC,KAAL,CAAWX,IAAIY,KAAf,EAAsBC,YAAtB,CAAR,CAAP;AACD;;AAEDvB,mDAAUI,IAAV,GACGY,IADH,CACQ,wBAAgB;AACpB,cAAIQ,cAAcpB,IAAd,EAAoBqB,YAApB,CAAJ,EAAuC;AACrC,mBAAOnB,QAAQ,IAAR,CAAP;AACD;;AAEDA,kBAAQc,KAAKC,KAAL,CAAWX,IAAIY,KAAf,EAAsBC,YAAtB,CAAR;AACD,SAPH;AAQD,OAtCD;AAuCD,KAxCqF,CAAlC;AAAA,GAArC;AAAA,C;;AA0Cf,SAASC,aAAT,CAAuBpB,IAAvB,EAA6BqB,YAA7B,EAA2C;AACzC,SAAOC,OAAOC,IAAP,CAAYF,YAAZ,EAA0BG,IAA1B,CAA+B;AAAA,WAAOH,aAAcvB,GAAd,MAAwBE,KAAMF,GAAN,CAA/B;AAAA,GAA/B,CAAP;AACD;;AAED,SAASqB,YAAT,CAAsBrB,GAAtB,EAA2BoB,KAA3B,EAAkC;AAChC,MAAI,CAAC,CAACA,KAAF,IAAW,CAAC,CAACA,MAAMO,MAAnB,IAA6B,CAAC,CAAC,CAACP,MAAMO,MAAN,CAAa,2GAAb,CAApC,EAA+J;AAC7J,WAAO,IAAIC,IAAJ,CAASR,KAAT,CAAP;AACD;AACD,SAAOA,KAAP;AACD","file":"load.js","sourcesContent":["import isFunction from 'lodash.isfunction';\n\nexport default (micro, client, { tagget, save }) => (key, callback, { tags } = {}) => new Promise((resolve, reject) => {\n  client.hgetall(key, function (err, res) {\n    if (err) {\n      micro.logger.error(err);\n      return reject({\n        code   : `error.plugin-cache-redis.get/${ err.code }`,\n        message: `Попытка получения ключа ${ key } привела к ошибке`\n      });\n    }\n\n    if (res === null) {\n\n      if (isFunction(callback)) {\n        let promise = callback(key);\n\n        if (!promise || !('then' in promise && isFunction(promise.then))) {\n          promise = Promise.resolve(promise);\n        }\n\n        return promise\n          .then(result => save(key, result, { tags }))\n          .then(resolve, reject);\n      }\n\n      return resolve(res);\n    }\n    \n    if (!Array.isArray(tags)) {\n      return resolve(JSON.parse(res.value, parseReviver));\n    }\n  \n    tagget(...tags)\n      .then(originalTags => {\n        if (hasTagUpdated(tags, originalTags)) {\n          return resolve(null);\n        }\n        \n        resolve(JSON.parse(res.value, parseReviver));\n      });\n  });\n});\n\nfunction hasTagUpdated(tags, originalTags) {\n  return Object.keys(originalTags).some(key => originalTags[ key ] === tags[ key ]);\n}\n\nfunction parseReviver(key, value) {\n  if (!!value && !!value.search && !!~value.search(/^[0-9]{4}[-]{1}[0-9]{2}[-]{1}[0-9]{2}[A-Z]{1}[0-9]{2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}[\\.]{1}[0-9]{3}[A-Z]{1}$/)) {\n    return new Date(value);\n  }\n  return value;\n}"]}