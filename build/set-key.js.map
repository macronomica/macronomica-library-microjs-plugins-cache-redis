{"version":3,"sources":["../src/set-key.js"],"names":["micro","client","key","value","Promise","resolve","reject","v","type","set","JSON","stringify","err","result","logger","error","code","message"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR;AAAA,SAAmB,UAACC,GAAD,EAAMC,KAAN;AAAA,WAAgB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjF,UAAIC,IAAI;AACNC,cAAM,iBAAOA,IAAP,CAAYL,KAAZ,CADA;AAENA;AAFM,OAAR;;AAKAF,aAAOQ,GAAP,CAAWP,GAAX,EAAgBQ,KAAKC,SAAL,CAAeJ,CAAf,CAAhB,EAAmC,UAAUK,GAAV,EAAeC,MAAf,EAAuB;AACxD,YAAID,GAAJ,EAAS;AACPZ,gBAAMc,MAAN,CAAaC,KAAb,CAAmBH,GAAnB;AACA,iBAAON,OAAO;AACZU,oDAA0CJ,IAAII,IADlC;AAEZC,2JAAqCf,GAArC;AAFY,WAAP,CAAP;AAID;;AAEDG,gBAAQF,KAAR;AACD,OAVD;AAWD,KAjBiD,CAAhB;AAAA,GAAnB;AAAA,C","file":"set-key.js","sourcesContent":["import upcast from './utils/upcast';\n\nexport default (micro, client) => (key, value) => new Promise((resolve, reject) => {\n  let v = {\n    type: upcast.type(value),\n    value\n  };\n  \n  client.set(key, JSON.stringify(v), function (err, result) {\n    if (err) {\n      micro.logger.error(err);\n      return reject({\n        code   : `error.plugin-cache-redis.set/${ err.code }`,\n        message: `Попытка установки ключа ${ key } привела к ошибке`\n      });\n    }\n    \n    resolve(value);\n  });\n});"]}