{"version":3,"sources":["../src/set-key.js"],"names":["micro","client","key","value","Promise","resolve","reject","v","JSON","stringify","set","err","result","logger","error","code","message"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,KAAD,EAAQC,MAAR;AAAA,SAAmB,UAACC,GAAD,EAAMC,KAAN;AAAA,WAAgB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjF,UAAIC,IAAIJ,KAAR;;AAEA,UAAI,sBAAcI,CAAd,CAAJ,EAAsB;AACpBA,YAAIC,KAAKC,SAAL,CAAeN,KAAf,CAAJ;AACD;;AAEDF,aAAOS,GAAP,CAAWR,GAAX,EAAgBK,CAAhB,EAAmB,UAAUI,GAAV,EAAeC,MAAf,EAAuB;AACxC,YAAID,GAAJ,EAAS;AACPX,gBAAMa,MAAN,CAAaC,KAAb,CAAmBH,GAAnB;AACA,iBAAOL,OAAO;AACZS,oDAA0CJ,IAAII,IADlC;AAEZC,2JAAqCd,GAArC;AAFY,WAAP,CAAP;AAID;;AAEDG,gBAAQF,KAAR;AACD,OAVD;AAWD,KAlBiD,CAAhB;AAAA,GAAnB;AAAA,C","file":"set-key.js","sourcesContent":["import isPlainObject from 'lodash.isplainobject';\n\nexport default (micro, client) => (key, value) => new Promise((resolve, reject) => {\n  let v = value;\n  \n  if (isPlainObject(v)) {\n    v = JSON.stringify(value);\n  }\n  \n  client.set(key, v, function (err, result) {\n    if (err) {\n      micro.logger.error(err);\n      return reject({\n        code   : `error.plugin-cache-redis.set/${ err.code }`,\n        message: `Попытка установки ключа ${ key } привела к ошибке`\n      });\n    }\n    \n    resolve(value);\n  });\n});"]}