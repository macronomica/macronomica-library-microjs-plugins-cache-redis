{"version":3,"sources":["../../src/test/get.spec.js"],"names":["should","micro","logger","error","console","err","client","createClient","delWrapper","getWrapper","setWrapper","describe","it","then","equal","result","done","data","id","Promise","resolve","after","quit","getValue","success","setValue","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,eAAKA,MAAL,EAAf;AACA,IAAMC,QAAQ;AACZC,UAAQ,EAAEC,OAAO;AAAA,aAAOC,QAAQD,KAAR,CAAcE,GAAd,CAAP;AAAA,KAAT;AADI,CAAd;AAGA,IAAMC,SAAS,gBAAWC,YAAX,EAAf;;AAEA,IAAMC,aAAa,sBAAIP,KAAJ,EAAWK,MAAX,CAAnB;AACA,IAAMG,aAAa,sBAAIR,KAAJ,EAAWK,MAAX,CAAnB;AACA,IAAMI,aAAa,sBAAIT,KAAJ,EAAWK,MAAX,CAAnB;;AAEAK,SAAS,KAAT,EAAgB,YAAW;;AAEzBA,WAAS,MAAT,EAAiB,YAAW;AAC1BC,OAAG,qBAAH,EAA0B,gBAAQ;;AAEhCH,iBAAW,UAAX,EACGI,IADH,CACQ,kBAAU;AACdb,eAAOc,KAAP,CAAa,IAAb,EAAmBC,MAAnB;AACAC;AACD,OAJH,EAIKA,IAJL;AAKD,KAPD;;AASAJ,OAAG,8CAAH,EAAmD,gBAAQ;AACzD,UAAMK,OAAO,EAAEC,IAAI,CAAN,EAAb;;AAEAT,iBAAW,aAAX,EAA0B;AAAA,eAAOQ,IAAP;AAAA,OAA1B,EACGJ,IADH,CACQ,kBAAU;AACdb,eAAOc,KAAP,CAAaG,IAAb,EAAmBF,MAAnB;AACAP,mBAAW,aAAX,EAA0BK,IAA1B,CAA+B;AAAA,iBAAMG,MAAN;AAAA,SAA/B,EAA6CA,IAA7C;AACD,OAJH,EAIKA,IAJL;AAKD,KARD;;AAUAJ,OAAG,wDAAH,EAA6D,gBAAQ;AACnE,UAAMK,OAAO,EAAEC,IAAI,CAAN,EAAb;;AAEAT,iBAAW,aAAX,EAA0B;AAAA,eAAOU,QAAQC,OAAR,CAAgBH,IAAhB,CAAP;AAAA,OAA1B,EACGJ,IADH,CACQ,kBAAU;AACdb,eAAOc,KAAP,CAAaG,IAAb,EAAmBF,MAAnB;AACAP,mBAAW,aAAX,EAA0BK,IAA1B,CAA+B;AAAA,iBAAMG,MAAN;AAAA,SAA/B,EAA6CA,IAA7C;AACD,OAJH,EAIKA,IAJL;AAKD,KARD;AASD,GA7BD;;AA+BAK,QAAM;AAAA,WAAMf,OAAOgB,IAAP,EAAN;AAAA,GAAN;AACD,CAlCD;;AAoCA,SAASC,QAAT,GAAoB;AAClB,SAAOd,WAAW,aAAX,EAA0BI,IAA1B,CAA+BW,OAA/B,EAAwCrB,KAAxC,CAAP;AACD;;AAED,SAASsB,QAAT,GAAoB;AAClB,SAAOf,WAAW,iBAAX,EAA8B,EAAEQ,IAAI,CAAN,EAA9B,EAAyCL,IAAzC,CAA8CW,OAA9C,EAAuDrB,KAAvD,CAAP;AACD;;AAED,SAASqB,OAAT,CAAiBT,MAAjB,EAAyB;AACvBX,UAAQsB,GAAR,CAAYX,MAAZ;AACD;;AAED,SAASZ,KAAT,CAAeA,KAAf,EAAsB;AACpBC,UAAQD,KAAR,CAAcA,KAAd;AACD","file":"get.spec.js","sourcesContent":["import chai from 'chai';\nimport middleware from 'redis';\nimport get from './../get-key';\nimport del from './../del-key';\nimport set from './../set-key';\n\nconst should = chai.should();\nconst micro = {\n  logger: { error: err => console.error(err) }\n};\nconst client = middleware.createClient();\n\nconst delWrapper = del(micro, client);\nconst getWrapper = get(micro, client);\nconst setWrapper = set(micro, client);\n\ndescribe('api', function() {\n  \n  describe('#get', function() {\n    it('должен вернуть null', done => {\n      \n      getWrapper('test-get')\n        .then(result => {\n          should.equal(null, result);\n          done();\n        }, done);\n    });\n    \n    it('должен вернуть объект переданный из callback', done => {\n      const data = { id: 1 };\n      \n      getWrapper('test-run-cb', key => data)\n        .then(result => {\n          should.equal(data, result);\n          delWrapper('test-run-cb').then(() => done(), done);\n        }, done);\n    });\n    \n    it('должен вернуть объект переданный из callback():Promise', done => {\n      const data = { id: 1 };\n      \n      getWrapper('test-run-cb', key => Promise.resolve(data))\n        .then(result => {\n          should.equal(data, result);\n          delWrapper('test-run-cb').then(() => done(), done);\n        }, done);\n    });\n  });\n  \n  after(() => client.quit());\n});\n\nfunction getValue() {\n  return getWrapper('test-run-cb').then(success, error);\n}\n\nfunction setValue() {\n  return setWrapper('test-set-object', { id: 2 }).then(success, error);\n}\n\nfunction success(result) {\n  console.log(result);\n}\n\nfunction error(error) {\n  console.error(error);\n}"]}